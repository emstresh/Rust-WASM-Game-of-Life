(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/wasm_game_of_life.js":
/*!***********************************!*\
  !*** ../pkg/wasm_game_of_life.js ***!
  \***********************************/
/*! exports provided: Universe, __wbg_new_59cb74e423758ede, __wbg_stack_558ba5917b466edd, __wbg_error_4bb6c2a97407129a, __wbindgen_object_drop_ref, __widl_f_time_with_label_, __widl_f_time_end_with_label_, __wbg_random_624219ee110d74d6, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return Universe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_59cb74e423758ede\", function() { return __wbg_new_59cb74e423758ede; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_stack_558ba5917b466edd\", function() { return __wbg_stack_558ba5917b466edd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_error_4bb6c2a97407129a\", function() { return __wbg_error_4bb6c2a97407129a; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_time_with_label_\", function() { return __widl_f_time_with_label_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_time_end_with_label_\", function() { return __widl_f_time_end_with_label_; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_random_624219ee110d74d6\", function() { return __wbg_random_624219ee110d74d6; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasm_game_of_life_bg.wasm */ \"../pkg/wasm_game_of_life_bg.wasm\");\n\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? __webpack_require__(/*! util */ \"./node_modules/util/util.js\").TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? __webpack_require__(/*! util */ \"./node_modules/util/util.js\").TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetInt32Memory0 = new Int32Array(_wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction notDefined(what) { return () => { throw new Error(`${what} is not defined`); }; }\n/**\n*/\nclass Universe {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_universe_free\"](ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Universe}\n    */\n    static new(width, height) {\n        var ret = _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_new\"](width, height);\n        return Universe.__wrap(ret);\n    }\n    /**\n    */\n    tick() {\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_tick\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_width\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_height\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} width\n    */\n    set_width(width) {\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_set_width\"](this.ptr, width);\n    }\n    /**\n    * @param {number} height\n    */\n    set_height(height) {\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_set_height\"](this.ptr, height);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    */\n    resize(width, height) {\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_resize\"](this.ptr, width, height);\n    }\n    /**\n    */\n    reset() {\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_reset\"](this.ptr);\n    }\n    /**\n    */\n    clear() {\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_clear\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    cells() {\n        var ret = _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_cells\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    num_changed() {\n        var ret = _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_num_changed\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    diff_cells() {\n        var ret = _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_diff_cells\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} row\n    * @param {number} column\n    */\n    toggle_cell(row, column) {\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_toggle_cell\"](this.ptr, row, column);\n    }\n    /**\n    * @param {number} row\n    * @param {number} column\n    * @param {boolean} value\n    */\n    set_cell(row, column, value) {\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_set_cell\"](this.ptr, row, column, value);\n    }\n    /**\n    * @param {number} row\n    * @param {number} column\n    */\n    insert_glider(row, column) {\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_insert_glider\"](this.ptr, row, column);\n    }\n    /**\n    * @param {number} row\n    * @param {number} column\n    */\n    insert_pulsar(row, column) {\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_insert_pulsar\"](this.ptr, row, column);\n    }\n}\n\nconst __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nconst __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nconst __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        _wasm_game_of_life_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](arg0, arg1);\n    }\n};\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nconst __widl_f_time_with_label_ = function(arg0, arg1) {\n    console.time(getStringFromWasm0(arg0, arg1));\n};\n\nconst __widl_f_time_end_with_label_ = function(arg0, arg1) {\n    console.timeEnd(getStringFromWasm0(arg0, arg1));\n};\n\nconst __wbg_random_624219ee110d74d6 = typeof Math.random == 'function' ? Math.random : notDefined('Math.random');\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///../pkg/wasm_game_of_life.js?");

/***/ }),

/***/ "../pkg/wasm_game_of_life_bg.wasm":
/*!****************************************!*\
  !*** ../pkg/wasm_game_of_life_bg.wasm ***!
  \****************************************/
/*! exports provided: memory, __wbg_universe_free, universe_new, universe_tick, universe_width, universe_height, universe_set_width, universe_set_height, universe_resize, universe_reset, universe_clear, universe_cells, universe_num_changed, universe_diff_cells, universe_toggle_cell, universe_set_cell, universe_insert_glider, universe_insert_pulsar, __wbindgen_free, __wbindgen_malloc, __wbindgen_realloc */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./wasm_game_of_life.js */ \"../pkg/wasm_game_of_life.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/wasm_game_of_life_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wasm-game-of-life */ \"../pkg/wasm_game_of_life.js\");\n/* harmony import */ var wasm_game_of_life_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wasm-game-of-life/wasm_game_of_life_bg */ \"../pkg/wasm_game_of_life_bg.wasm\");\n/* harmony import */ var _js_draw__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/draw */ \"./js/draw.js\");\n/* harmony import */ var _js_themes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/themes */ \"./js/themes.js\");\n/* harmony import */ var _js_stats__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./js/stats */ \"./js/stats.js\");\n\n\n\n\n\n\nconst CELL_SIZE = 15; // px\n\nconst calculateDimensions = () => {\n  const board = document.getElementById('game-board');\n  const width = board.clientWidth;\n  const height = board.clientHeight;\n\n  const universeWidth = Math.floor(width / (CELL_SIZE + 1));\n  const universeHeight = Math.floor(height / (CELL_SIZE + 1));\n\n  return [ universeWidth, universeHeight ];\n};\n\nconst gameState = (function() {\n  let self = {};\n\n  // initialize a new universe\n  let dimensions = calculateDimensions();\n  const universe = wasm_game_of_life__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].new(dimensions[0], dimensions[1]);\n  let width = universe.width();\n  let height = universe.height();\n\n  // get the canvas and its 2d context\n  const canvas = document.getElementById('game-of-life-canvas');\n  const ctx = canvas.getContext('2d');\n  // set the canvas dimensions such that we have a 1px border around cells\n  canvas.height = (CELL_SIZE + 1) * height + 1;\n  canvas.width = (CELL_SIZE + 1) * width + 1;\n\n  // button controls\n  const playPauseButton = document.getElementById('play-pause');\n  const resetButton = document.getElementById('reset');\n  const clearButton = document.getElementById('clear');\n  const themeButton = document.getElementById('change-theme');\n  const tickRange = document.getElementById('tickRange');\n\n  // if the user clicks the canvas, we want to either toggle a cell\n  // or insert a shape\n  const onCanvasClick = (evt) => {\n    // figure out which cell was clicked\n    const boundingRect = canvas.getBoundingClientRect();\n\n    const scaleX = canvas.width / boundingRect.width;\n    const scaleY = canvas.height / boundingRect.height;\n\n    const canvasLeft = (evt.clientX - boundingRect.left) * scaleX;\n    const canvasTop = (evt.clientY - boundingRect.top) * scaleY;\n\n    const row = Math.min(Math.floor(canvasTop / (CELL_SIZE + 1)), height - 1);\n    const col = Math.min(Math.floor(canvasLeft / (CELL_SIZE + 1)), width - 1);\n\n    if (evt.metaKey) { // cmd + click inserts a glider\n      universe.insert_glider(row, col);\n    } else if (evt.shiftKey) { // shift + click inserts a pulsar\n      universe.insert_pulsar(row, col);\n    } else { // regular click toggles the cell\n      universe.toggle_cell(row, col);\n    }\n\n    render();\n  };\n\n  // play the simulation\n  const play = () => {\n    playPauseButton.textContent = '❙❙';\n    playPauseButton.title = 'Pause';\n    renderLoop();\n  };\n\n  // pause the simulation\n  const pause = () => {\n    playPauseButton.textContent = '▶';\n    playPauseButton.title = 'Play';\n    cancelAnimationFrame(animationId);\n    animationId = null;\n  };\n\n  // play/pause toggle\n  const toggle = () => {\n    if (isPaused()) {\n      play();\n    } else {\n      pause();\n    }\n  };\n\n  // reset the universe to a new random layout\n  const reset = () => {\n    universe.reset();\n    render();\n  };\n\n  // clear the board (set all cells to \"dead\")\n  const clear = () => {\n    universe.clear();\n    render();\n  };\n\n  // check whether or not the simulation is paused\n  const isPaused = () => (\n    animationId === null\n  );\n\n  // resize the universe based on window resize\n  const resizeUniverse = () => {\n    if (!isPaused()) pause();\n    dimensions = calculateDimensions();\n    universe.resize(dimensions[0], dimensions[1]);\n    width = universe.width();\n    height = universe.height();\n    canvas.height = (CELL_SIZE + 1) * height + 1;\n    canvas.width = (CELL_SIZE + 1) * width + 1;\n    render();\n  };\n\n  playPauseButton.addEventListener('click', toggle);\n  resetButton.addEventListener('click', reset);\n  clearButton.addEventListener('click', clear);\n  themeButton.addEventListener('click', (evt) => {\n    _js_themes__WEBPACK_IMPORTED_MODULE_3__[\"theme\"].cycleTheme();\n    render(true);\n  });\n\n  tickRange.addEventListener('change', (evt) => {\n    ticksPerAnimationStep = parseInt(evt.target.value, 10);\n  });\n\n  let resizeTimer;\n  window.onresize = (evt) => {\n    clearTimeout(resizeTimer);\n    resizeTimer = setTimeout(resizeUniverse, 100);\n  };\n  window.onkeyup = (evt) => {\n    if (evt.key === 'f') {\n      toggle();\n    } else if (evt.key === 'r') {\n      reset();\n    } else if (evt.key === 'v') {\n      clear();\n    }\n  };\n\n  // render the game board by redrawing the cells that changed since the last frame\n  const render = (redrawAll = false) => {\n    const cellsPtr = universe.cells();\n    const cells = new Uint8Array(wasm_game_of_life_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, cellsPtr, width * height);\n    \n    const numChanged = universe.num_changed();\n    const diffCellsPtr = universe.diff_cells();\n    const diffCells = new Uint32Array(wasm_game_of_life_wasm_game_of_life_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, diffCellsPtr, numChanged);\n\n    if (redrawAll) {\n      Object(_js_draw__WEBPACK_IMPORTED_MODULE_2__[\"drawAllCells\"])(ctx, cells, CELL_SIZE, width);\n    } else {\n      Object(_js_draw__WEBPACK_IMPORTED_MODULE_2__[\"updateCells\"])(ctx, cells, numChanged, diffCells, CELL_SIZE, width);\n    }\n    Object(_js_draw__WEBPACK_IMPORTED_MODULE_2__[\"drawGrid\"])(ctx, CELL_SIZE, width, height);\n  };\n\n  let animationId = null;\n  let ticksPerAnimationStep = 1;\n  const renderLoop = () => {\n    _js_stats__WEBPACK_IMPORTED_MODULE_4__[\"fps\"].render();\n\n    for (let i = 0; i < ticksPerAnimationStep; i++) {\n      universe.tick();\n    }\n\n    render();\n\n    animationId = requestAnimationFrame(renderLoop);\n  };\n\n  canvas.addEventListener('click', onCanvasClick);\n  render();\n\n  return self;\n})();\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./js/draw.js":
/*!********************!*\
  !*** ./js/draw.js ***!
  \********************/
/*! exports provided: drawGrid, updateCells, drawAllCells */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawGrid\", function() { return drawGrid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateCells\", function() { return updateCells; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawAllCells\", function() { return drawAllCells; });\n/* harmony import */ var _themes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./themes */ \"./js/themes.js\");\n\n\nconst bitIsSet = (n, arr) => {\n  const byte = Math.floor(n / 8);\n  const mask = 1 << (n % 8);\n  return (arr[byte] & mask) === mask;\n};\n\nfunction drawGrid (ctx, cellSize, width, height) {\n  ctx.beginPath();\n  ctx.strokeStyle = _themes__WEBPACK_IMPORTED_MODULE_0__[\"theme\"].getValue('--tertiary-color');\n\n  // Vertical lines\n  for (let i = 0; i <= width; i++) {\n    ctx.moveTo(i * (cellSize + 1) + 1, 0);\n    ctx.lineTo(i * (cellSize + 1) + 1, (cellSize + 1) * height + 1);\n  }\n\n  // Horizontal lines\n  for (let j = 0; j <= height; j++) {\n    ctx.moveTo(0, j * (cellSize + 1) + 1);\n    ctx.lineTo((cellSize + 1) * width + 1, j * (cellSize + 1) + 1);\n  }\n\n  ctx.stroke();\n}\n\nfunction updateCells(ctx, cells, numChanged, diffCells, cellSize, width) {\n  ctx.beginPath();\n\n  ctx.fillStyle = _themes__WEBPACK_IMPORTED_MODULE_0__[\"theme\"].getValue('--alive-color');\n  for (let i = 0; i < numChanged; i++) {\n    const idx = diffCells[i];\n    const row = Math.floor(idx / width);\n    const col = idx % width;\n\n    if (bitIsSet(idx, cells)) {\n      ctx.fillRect(\n        col * (cellSize + 1) + 1,\n        row * (cellSize + 1) + 1,\n        cellSize,\n        cellSize\n      );\n    }\n  }\n\n  ctx.fillStyle = _themes__WEBPACK_IMPORTED_MODULE_0__[\"theme\"].getValue('--dead-color');\n  for (let i = 0; i < numChanged; i++) {\n    const idx = diffCells[i];\n    const row = Math.floor(idx / width);\n    const col = idx % width;\n\n    if (!bitIsSet(idx, cells)) {\n      ctx.fillRect(\n        col * (cellSize + 1) + 1,\n        row * (cellSize + 1) + 1,\n        cellSize,\n        cellSize\n      );\n    }\n  }\n\n  ctx.stroke();\n}\n\nfunction drawAllCells(ctx, cells, cellSize, width) {\n  ctx.beginPath();\n\n  ctx.fillStyle = _themes__WEBPACK_IMPORTED_MODULE_0__[\"theme\"].getValue('--alive-color');\n  for (let i = 0; i < cells.length; i++) {\n    const row = Math.floor(i / width);\n    const col = i % width;\n\n    if (bitIsSet(i, cells)) {\n      ctx.fillRect(\n        col * (cellSize + 1) + 1,\n        row * (cellSize + 1) + 1,\n        cellSize,\n        cellSize\n      );\n    }\n  }\n\n  ctx.fillStyle = _themes__WEBPACK_IMPORTED_MODULE_0__[\"theme\"].getValue('--dead-color');\n  for (let i = 0; i < cells.length; i++) {\n    const row = Math.floor(i / width);\n    const col = i % width;\n\n    if (!bitIsSet(i, cells)) {\n      ctx.fillRect(\n        col * (cellSize + 1) + 1,\n        row * (cellSize + 1) + 1,\n        cellSize,\n        cellSize\n      );\n    }\n  }\n\n  ctx.stroke();\n}\n\n\n//# sourceURL=webpack:///./js/draw.js?");

/***/ }),

/***/ "./js/stats.js":
/*!*********************!*\
  !*** ./js/stats.js ***!
  \*********************/
/*! exports provided: fps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fps\", function() { return fps; });\nconst fps = new class {\n  constructor() {\n    this.fps = document.getElementById(\"fps\");\n    this.frames = [];\n    this.lastFrameTimeStamp = performance.now();\n  }\n\n  render() {\n    const now = performance.now();\n    const delta = now - this.lastFrameTimeStamp;\n    this.lastFrameTimeStamp = now;\n    const fps = 1 / delta * 1000;\n\n    this.frames.push(fps);\n    if (this.frames.length > 100) {\n      this.frames.shift();\n    }\n\n    let min = Infinity;\n    let max = -Infinity;\n    let sum = 0;\n    for (let i = 0; i < this.frames.length; i++) {\n      sum += this.frames[i];\n      min = Math.min(this.frames[i], min);\n      max = Math.max(this.frames[i], max);\n    }\n    let mean = sum / this.frames.length;\n\n    this.fps.textContent = `\nFrames per Second:\n         latest = ${Math.round(fps)}\navg of last 100 = ${Math.round(mean)}\nmin of last 100 = ${Math.round(min)}\nmax of last 100 = ${Math.round(max)}\n`.trim();\n  }\n}\n\n\n\n//# sourceURL=webpack:///./js/stats.js?");

/***/ }),

/***/ "./js/themes.js":
/*!**********************!*\
  !*** ./js/themes.js ***!
  \**********************/
/*! exports provided: theme */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"theme\", function() { return theme; });\nconst themes = [\n  [\n    '#EA526F',\n    '#FCEADE',\n    '#FF8A5B',\n    '#25CED1',\n    '#FFFFFF'\n  ],\n  [\n    '#56E39F',\n    '#2A1F2D',\n    '#58C1C9',\n    '#59686D',\n    '#3B2C35'\n  ],\n  [\n    '#735290',\n    '#363457',\n    '#C4A69D',\n    '#98A886',\n    '#465C69'\n  ]\n];\n\nconst root = document.documentElement;\n\nconst theme = (function() {\n  let self = {};\n\n  let idx = 0;\n  self.colors = [];\n\n  self.set = (newTheme) => {\n    root.style.setProperty('--alive-color', newTheme[0]);\n    root.style.setProperty('--dead-color', newTheme[1]);\n    root.style.setProperty('--primary-color', newTheme[2]);\n    root.style.setProperty('--secondary-color', newTheme[3]);\n    root.style.setProperty('--tertiary-color', newTheme[4]);\n    self.colors = newTheme;\n  };\n\n  self.cycleTheme = () => {\n    idx = (idx + 1) % themes.length;\n    self.set(themes[idx]);\n  };\n\n  self.getValue = (varName) => ( root.style.getPropertyValue(varName) );\n\n  self.set(themes[0]);\n  return self;\n})();\n\n\n\n\n//# sourceURL=webpack:///./js/themes.js?");

/***/ })

}]);